Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> cmd
Rule 1     cmd -> command
Rule 2     cmd -> command param_list
Rule 3     command -> EXECUTE
Rule 4     command -> MKDISK
Rule 5     command -> RMDISK
Rule 6     command -> FDISK
Rule 7     command -> MOUNT
Rule 8     command -> MKFS
Rule 9     command -> LOGIN
Rule 10    command -> LOGOUT
Rule 11    command -> MKUSR
Rule 12    command -> RMUSR
Rule 13    command -> MKGRP
Rule 14    command -> RMGRP
Rule 15    command -> MKFILE
Rule 16    command -> MKDIR
Rule 17    command -> REP
Rule 18    param_list -> param
Rule 19    param_list -> param_list param
Rule 20    param -> GUION PALABRA
Rule 21    param -> GUION PALABRA IGUAL param_value
Rule 22    param_value -> PALABRA
Rule 23    param_value -> STRING
Rule 24    param_value -> NUMERO

Terminals, with rules where they appear

COMMENT              : 
EXECUTE              : 3
FDISK                : 6
GUION                : 20 21
IGUAL                : 21
LOGIN                : 9
LOGOUT               : 10
MKDIR                : 16
MKDISK               : 4
MKFILE               : 15
MKFS                 : 8
MKGRP                : 13
MKUSR                : 11
MOUNT                : 7
NUMERO               : 24
PALABRA              : 20 21 22
REP                  : 17
RMDISK               : 5
RMGRP                : 14
RMUSR                : 12
STRING               : 23
error                : 

Nonterminals, with rules where they appear

cmd                  : 0
command              : 1 2
param                : 18 19
param_list           : 2 19
param_value          : 21

Parsing method: LALR

state 0

    (0) S' -> . cmd
    (1) cmd -> . command
    (2) cmd -> . command param_list
    (3) command -> . EXECUTE
    (4) command -> . MKDISK
    (5) command -> . RMDISK
    (6) command -> . FDISK
    (7) command -> . MOUNT
    (8) command -> . MKFS
    (9) command -> . LOGIN
    (10) command -> . LOGOUT
    (11) command -> . MKUSR
    (12) command -> . RMUSR
    (13) command -> . MKGRP
    (14) command -> . RMGRP
    (15) command -> . MKFILE
    (16) command -> . MKDIR
    (17) command -> . REP

    EXECUTE         shift and go to state 3
    MKDISK          shift and go to state 4
    RMDISK          shift and go to state 5
    FDISK           shift and go to state 6
    MOUNT           shift and go to state 7
    MKFS            shift and go to state 8
    LOGIN           shift and go to state 9
    LOGOUT          shift and go to state 10
    MKUSR           shift and go to state 11
    RMUSR           shift and go to state 12
    MKGRP           shift and go to state 13
    RMGRP           shift and go to state 14
    MKFILE          shift and go to state 15
    MKDIR           shift and go to state 16
    REP             shift and go to state 17

    cmd                            shift and go to state 1
    command                        shift and go to state 2

state 1

    (0) S' -> cmd .



state 2

    (1) cmd -> command .
    (2) cmd -> command . param_list
    (18) param_list -> . param
    (19) param_list -> . param_list param
    (20) param -> . GUION PALABRA
    (21) param -> . GUION PALABRA IGUAL param_value

    $end            reduce using rule 1 (cmd -> command .)
    GUION           shift and go to state 20

    param_list                     shift and go to state 18
    param                          shift and go to state 19

state 3

    (3) command -> EXECUTE .

    GUION           reduce using rule 3 (command -> EXECUTE .)
    $end            reduce using rule 3 (command -> EXECUTE .)


state 4

    (4) command -> MKDISK .

    GUION           reduce using rule 4 (command -> MKDISK .)
    $end            reduce using rule 4 (command -> MKDISK .)


state 5

    (5) command -> RMDISK .

    GUION           reduce using rule 5 (command -> RMDISK .)
    $end            reduce using rule 5 (command -> RMDISK .)


state 6

    (6) command -> FDISK .

    GUION           reduce using rule 6 (command -> FDISK .)
    $end            reduce using rule 6 (command -> FDISK .)


state 7

    (7) command -> MOUNT .

    GUION           reduce using rule 7 (command -> MOUNT .)
    $end            reduce using rule 7 (command -> MOUNT .)


state 8

    (8) command -> MKFS .

    GUION           reduce using rule 8 (command -> MKFS .)
    $end            reduce using rule 8 (command -> MKFS .)


state 9

    (9) command -> LOGIN .

    GUION           reduce using rule 9 (command -> LOGIN .)
    $end            reduce using rule 9 (command -> LOGIN .)


state 10

    (10) command -> LOGOUT .

    GUION           reduce using rule 10 (command -> LOGOUT .)
    $end            reduce using rule 10 (command -> LOGOUT .)


state 11

    (11) command -> MKUSR .

    GUION           reduce using rule 11 (command -> MKUSR .)
    $end            reduce using rule 11 (command -> MKUSR .)


state 12

    (12) command -> RMUSR .

    GUION           reduce using rule 12 (command -> RMUSR .)
    $end            reduce using rule 12 (command -> RMUSR .)


state 13

    (13) command -> MKGRP .

    GUION           reduce using rule 13 (command -> MKGRP .)
    $end            reduce using rule 13 (command -> MKGRP .)


state 14

    (14) command -> RMGRP .

    GUION           reduce using rule 14 (command -> RMGRP .)
    $end            reduce using rule 14 (command -> RMGRP .)


state 15

    (15) command -> MKFILE .

    GUION           reduce using rule 15 (command -> MKFILE .)
    $end            reduce using rule 15 (command -> MKFILE .)


state 16

    (16) command -> MKDIR .

    GUION           reduce using rule 16 (command -> MKDIR .)
    $end            reduce using rule 16 (command -> MKDIR .)


state 17

    (17) command -> REP .

    GUION           reduce using rule 17 (command -> REP .)
    $end            reduce using rule 17 (command -> REP .)


state 18

    (2) cmd -> command param_list .
    (19) param_list -> param_list . param
    (20) param -> . GUION PALABRA
    (21) param -> . GUION PALABRA IGUAL param_value

    $end            reduce using rule 2 (cmd -> command param_list .)
    GUION           shift and go to state 20

    param                          shift and go to state 21

state 19

    (18) param_list -> param .

    GUION           reduce using rule 18 (param_list -> param .)
    $end            reduce using rule 18 (param_list -> param .)


state 20

    (20) param -> GUION . PALABRA
    (21) param -> GUION . PALABRA IGUAL param_value

    PALABRA         shift and go to state 22


state 21

    (19) param_list -> param_list param .

    GUION           reduce using rule 19 (param_list -> param_list param .)
    $end            reduce using rule 19 (param_list -> param_list param .)


state 22

    (20) param -> GUION PALABRA .
    (21) param -> GUION PALABRA . IGUAL param_value

    GUION           reduce using rule 20 (param -> GUION PALABRA .)
    $end            reduce using rule 20 (param -> GUION PALABRA .)
    IGUAL           shift and go to state 23


state 23

    (21) param -> GUION PALABRA IGUAL . param_value
    (22) param_value -> . PALABRA
    (23) param_value -> . STRING
    (24) param_value -> . NUMERO

    PALABRA         shift and go to state 24
    STRING          shift and go to state 26
    NUMERO          shift and go to state 27

    param_value                    shift and go to state 25

state 24

    (22) param_value -> PALABRA .

    GUION           reduce using rule 22 (param_value -> PALABRA .)
    $end            reduce using rule 22 (param_value -> PALABRA .)


state 25

    (21) param -> GUION PALABRA IGUAL param_value .

    GUION           reduce using rule 21 (param -> GUION PALABRA IGUAL param_value .)
    $end            reduce using rule 21 (param -> GUION PALABRA IGUAL param_value .)


state 26

    (23) param_value -> STRING .

    GUION           reduce using rule 23 (param_value -> STRING .)
    $end            reduce using rule 23 (param_value -> STRING .)


state 27

    (24) param_value -> NUMERO .

    GUION           reduce using rule 24 (param_value -> NUMERO .)
    $end            reduce using rule 24 (param_value -> NUMERO .)

